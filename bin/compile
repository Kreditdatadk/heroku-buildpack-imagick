#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=$1
CACHE_DIR=$2
VENDOR_DIR="$BUILD_DIR/vendor"


echo "-----> Install ImageMagick"

IMAGE_MAGICK_VERSION="${IMAGE_MAGICK_VERSION:-6.9.3-7}"
INSTALL_DIR="$VENDOR_DIR/imagemagick"
CACHE_FILE="$CACHE_DIR/imagemagick-${IMAGE_MAGICK_VERSION}-compiled.tar.gz"

if [ ! -f $CACHE_FILE ]; then
  # install imagemagick
  IMAGE_MAGICK_FILE="ImageMagick-$IMAGE_MAGICK_VERSION.tar.xz"
  IMAGE_MAGICK_DIR="ImageMagick-$IMAGE_MAGICK_VERSION"
  # SSL cert used on imagemagick not recognized by heroku.
  IMAGE_MAGICK_URL="http://www.imagemagick.org/download/releases/$IMAGE_MAGICK_FILE"

  echo "-----> Downloading ImageMagick from $IMAGE_MAGICK_URL"
  wget $IMAGE_MAGICK_URL -P $BUILD_DIR | indent

  echo "-----> Extracting ImageMagick from $BUILD_DIR/$IMAGE_MAGICK_FILE"
  if [ ! -f $BUILD_DIR/$IMAGE_MAGICK_FILE ]; then
    echo "Error: Unable to download ImageMagick" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi
  tar xvfJ $BUILD_DIR/$IMAGE_MAGICK_FILE | indent

  echo "-----> Building ImageMagick"
  cd $IMAGE_MAGICK_DIR
  export CPPFLAGS="-I$INSTALL_DIR/include"
  export LDFLAGS="-L$INSTALL_DIR/lib"
  ./configure --prefix=$INSTALL_DIR
  make && make install
  cd ..
  rm -rf $IMAGE_MAGICK_DIR

  # cache for future deploys
  echo "-----> Caching ImageMagick installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="imagemagick"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $CACHE_FILE

else
  # cache exists, extract it
  echo "-----> Extracting cached ImageMagick $CACHE_FILE => $VENDOR_DIR"
  tar xzf $CACHE_FILE -C $VENDOR_DIR
fi

echo "-----> Install Imagick"
IMAGICK_VERSION="${IMAGICK_VERSION:-3.4.1}"
IMAGICK_INSTALL_DIR="$VENDOR_DIR/imagick"
mkdir $IMAGICK_INSTALL_DIR
IMAGICK_INSTALL_FILE="$IMAGICK_INSTALL_DIR/imagick.so"
IMAGICK_CACHE_FILE="$CACHE_DIR/imagick-${IMAGICK_VERSION}.so"

if [ ! -f $IMAGICK_CACHE_FILE ]; then
  # install imagick
  IMAGICK_FILE="Imagick-$IMAGICK_VERSION.tgz"
  IMAGICK_DIR="imagick-$IMAGICK_VERSION"
  # SSL cert used on imagemagick not recognized by heroku.
  # pecl.php.net/get/imagick/3.4.1
  IMAGICK_URL="pecl.php.net/get/imagick/$IMAGICK_VERSION"

  echo "-----> Downloading Imagick from $IMAGICK_URL"
  wget $IMAGICK_URL -O $BUILD_DIR/$IMAGICK_FILE | indent

  echo "-----> Extracting ImageMagick from $BUILD_DIR/$IMAGICK_FILE"
  if [ ! -f $BUILD_DIR/$IMAGICK_FILE ]; then
    echo "Error: Unable to download Imagick" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi
  tar xvzf $BUILD_DIR/$IMAGICK_FILE | indent

  echo "-----> Building Imagick"
  cd $IMAGICK_DIR
  export CPPFLAGS="-I$IMAGICK_INSTALL_DIR/include"
  export LDFLAGS="-L$IMAGICK_INSTALL_DIR/lib"
  phpize
  ./configure --prefix=$IMAGICK_INSTALL_DIR
  make
  mv modules/imagick.so $IMAGICK_INSTALL_FILE
  cd ..
  rm -rf $IMAGICK_DIR

  # cache for future deploys
  echo "-----> Caching Imagick installation"
  cp $IMAGICK_INSTALL_FILE $IMAGICK_CACHE_FILE

else
  # cache exists, extract it
  echo "-----> Extracting cached Imagick $IMAGICK_CACHE_FILE => $VENDOR_DIR"
  cp $IMAGICK_CACHE_FILE $IMAGICK_INSTALL_FILE
fi

# update PATH and LD_LIBRARY_PATH
echo "-----> Updating environment variables"
PROFILE_PATH="$BUILD_DIR/.profile.d/imagemagick.sh"
ACTUAL_INSTALL_PATH="$HOME/vendor/imagemagick"
mkdir -p $(dirname $PROFILE_PATH)
echo "export PATH=$ACTUAL_INSTALL_PATH/bin:\$PATH" >> $PROFILE_PATH
echo "export LD_LIBRARY_PATH=$ACTUAL_INSTALL_PATH/lib:\$LD_LIBRARY_PATH" >> $PROFILE_PATH
